import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';
import { Document, Model } from 'mongoose';

export type ProductDocument = Product & Document;

@Schema({ timestamps: true })
// createdAt
// 2025-06-13T03:27:35.331+00:00
// updatedAt
// 2025-06-13T03:27:35.331+00:00
export class Product {
    @Prop({ unique: true }) //generate
    sku: string;

    @Prop({ unique: true })
    name: string;

    @Prop({ required: true })
    category: string;

    @Prop({ required: true })
    quantity: number;

    @Prop({ required: true })
    unit: string;

    @Prop({ required: true })
    price: string;

    @Prop({ required: true })
    addedBy: string;

    @Prop()
    imgPath: string;


}
export const ProductSchema = SchemaFactory.createForClass(Product);

ProductSchema.pre('save', async function (next) {
    //generate sku key
    if (this.sku) return next(); // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ sku ‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£

    const ProductModel = this.constructor as Model<ProductDocument>;

    // üîç ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ product ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡πÉ‡∏ô DB ‡πÑ‡∏´‡∏°
    const existingProduct = await ProductModel.findOne({ name: this.name });

    if (existingProduct) {
        // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô ‡πÉ‡∏ä‡πâ sku ‡πÄ‡∏î‡∏¥‡∏°
        this.sku = existingProduct.sku;
    } else {
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ‚Üí generate sku ‡πÉ‡∏´‡∏°‡πà
        const count = await ProductModel.countDocuments();
        const nextNumber = count + 1;
        const paddedNumber = String(nextNumber).padStart(3, '0'); // 001, 002, ...
        this.sku = `PROD${paddedNumber}`;
    }

    next();
});